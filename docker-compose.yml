version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres-image-upload
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      # Persistent data volume - survives container restarts and system reboots
      - postgres_data:/var/lib/postgresql/data
      # Optional: Mount initialization scripts
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - image_upload_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d image_upload_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin-image-upload
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - image_upload_network
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  # Persistent volume for PostgreSQL data
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./docker/postgres/data
  # Persistent volume for pgAdmin data
  pgadmin_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./docker/pgadmin/data

networks:
  image_upload_network:
    driver: bridge 