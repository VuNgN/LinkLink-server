version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres-image-upload-staging
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-image_upload_staging}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5433:5432"  # Different port for staging
    volumes:
      - postgres_staging_data:/var/lib/postgresql/data
    networks:
      - image_upload_staging_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d image_upload_staging"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  app:
    build: .
    container_name: image-upload-app-staging
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@postgres:5432/image_upload_staging
      - SECRET_KEY=${SECRET_KEY:-staging_secret_key}
      - LOG_LEVEL=INFO
    ports:
      - "8001:8000"  # Different port for staging
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - image_upload_staging_network
    volumes:
      - ./uploads:/app/uploads

  # Optional: pgAdmin for staging
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin-image-upload-staging
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@staging.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8081:80"  # Different port for staging
    volumes:
      - pgadmin_staging_data:/var/lib/pgadmin
    networks:
      - image_upload_staging_network
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_staging_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./docker/postgres/staging_data
  pgadmin_staging_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./docker/pgadmin/staging_data

networks:
  image_upload_staging_network:
    driver: bridge 