name: CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  backend:
    name: Backend (FastAPI)
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
    defaults:
      run:
        working-directory: ./
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.PGUSER }}
          POSTGRES_PASSWORD: ${{ secrets.PGPASSWORD }}
          POSTGRES_DB: ${{ secrets.PGDATABASE }}
        ports: [5432:5432]
        options: >-
          --health-cmd="pg_isready -U postgres" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint backend (flake8)
        run: |
          pip install flake8
          flake8 app main.py

      - name: Test backend (pytest)
        run: |
          pip install pytest
          pytest

      - name: Security scan backend (trivy)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          scan-ref: app

  frontend:
    name: Frontend (Vite)
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install frontend dependencies
        run: npm ci

      - name: Lint frontend (ESLint)
        run: npm run lint

      - name: Build frontend
        run: npm run build

      - name: Security scan frontend (trivy)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          scan-ref: frontend 